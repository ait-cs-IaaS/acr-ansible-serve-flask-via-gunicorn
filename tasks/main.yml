---
- name: Ensure app packages are installed
  become: true
  ansible.builtin.package:
    name: "{{ app_packages }}"
    state: present
    update_cache: true
    cache_valid_time: 3600

- name: Create user {{ app_user }}
  become: true
  ansible.builtin.user:
    name: "{{ app_user }}"
    home: "{{ app_basepath }}"
    shell: /usr/sbin/nologin
    create_home: false

- name: Create {{ app_basepath }}
  become: true
  ansible.builtin.file:
    path: "{{ app_basepath }}"
    owner: "{{ app_user }}"
    group: "{{ app_group }}"
    mode: "0755"
    state: directory
    recurse: true

- name: Copying service-template to server
  become: true
  ansible.builtin.template:
    src: "{{ app_service_file }}"
    dest: /etc/systemd/system/{{ app_name }}.service
    mode: preserve

- name: Clone App to {{ app_basepath }}
  become: true
  become_user: "{{ app_user }}"
  ansible.builtin.git:
    repo: "{{ app_repo }}"
    dest: "{{ app_basepath }}"
    version: "{{ app_branch }}"
    accept_hostkey: true
    single_branch: true
    recursive: false
    force: true
    depth: 1
  environment:
    GIT_TERMINAL_PROMPT: "0"

- name: Use setuptools
  when: use_setuptools
  block:
    - name: Install build modules
      become: true
      become_user: "{{ app_user }}"
      ansible.builtin.pip:
        name:
          - setuptools
          - wheel
          - build
        virtualenv: "{{ app_basepath }}/venv"
        virtualenv_command: python3.9 -m venv

    - name: Install app in virtualenv
      become: true
      become_user: "{{ app_user }}"
      ansible.builtin.pip:
        name: "{{ app_basepath }}"
        virtualenv: "{{ app_basepath }}/venv"
        virtualenv_command: python3.9 -m venv

- name: Install requirements
  become: true
  become_user: "{{ app_user }}"
  ansible.builtin.pip:
    requirements: "{{ app_basepath }}/requirements.txt"
    virtualenv: "{{ app_basepath }}/venv"
    virtualenv_command: python3.9 -m venv
  when: not use_setuptools

- name: Install gunicorn
  become: true
  become_user: "{{ app_user }}"
  ansible.builtin.pip:
    name: gunicorn
    virtualenv: "{{ app_basepath }}/venv"
    virtualenv_command: python3.9 -m venv

- name: Start service {{ app_name }}
  become: true
  ansible.builtin.systemd:
    name: "{{ app_name }}.service"
    state: restarted
    daemon_reload: true
    enabled: "{{ app_autostart }}"
